#!/usr/bin/env node

/**
 * Module dependencies
 */

var exec = require('child_process').exec
var join = require('path').join
var Gaze = require('gaze').Gaze
var debug = require('debug')('watch')

/**
 * Watch pattern.
 */

var pattern = process.argv[2]

/**
 * Command to execute.
 */

var command = command()

/**
 * Stats.
 */

var executed = 0

/**
 * Add listeners
 */

var gaze = new Gaze(pattern)

gaze.on('ready', ready)
gaze.on('all', build)

/**
 * When watching, give us information.
 *
 * @param {Object} watcher
 */

function ready (watcher) {
  debug('watching `%s` execute `%s`', pattern, command)
  build()
}

/**
 * Execute command when file in dir changes
 * and log stdout and possibly stderr.
 *
 * @param {String} event
 * @param {String} path
 */

function build (event, path) {
  executed++
  if(executed > 1) debug('something %s, recompiling', event);

  exec(command, function(err, stdout, stderr) {
    if(err) throw err;
    if(stderr) console.log(stderr)
    if(stdout) console.log(stdout)
  })
}

/**
 * Get the command from process.argv
 *
 * @return {String} args
 */

function command () {
  var args = process.argv
    .splice(3)
    .toString()
    .replace(/\,/g, ' ')

  return args
}